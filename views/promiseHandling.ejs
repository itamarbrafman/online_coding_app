// Simulating a function that returns a promise
function simulatePromiseHandling() {
  return new Promise((resolve, reject) => {
    // Simulating asynchronous operations
    setTimeout(() => {
      const success = true; // Set to true for successful promise, false for error simulation

      if (success) {
        resolve('Promise resolved successfully!');
      } else {
        reject(new Error('Promise rejected with an error.'));
      }
    }, 2000);
  });
}

// Calling the function and handling the promise
simulatePromiseHandling()
  .then((result) => {
    console.log('Promise success:', result);
  })
  .catch((error) => {
    console.error('Promise error:', error.message);
  });
